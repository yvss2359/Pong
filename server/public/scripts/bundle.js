(()=>{"use strict";class t{constructor(t,e,s,i=0,h=0){this.y=e,this.x=t,this.img=new Image,this.img.src=s,this.shiftX=i,this.shiftY=h}get width(){return this.img.width}get height(){return this.img.height}move(){this.x=this.x+this.shiftX,this.y=this.y+this.shiftY}draw(t){t.drawImage(this.img,this.x,this.y)}stopMoving(){this.shiftX=0,this.shiftY=0}}class e extends t{constructor(t,e,s){super(t,e,"./images/balle24.png",8,0),this.theGame=s,this.ballMoving=!0,this.gauche=!1,this.droite=!1}move(){this.y<=0||this.y+this.height>=this.theGame.canvas.height?this.shiftY=-this.shiftY:this.x+this.width>=this.theGame.canvas.width?(this.droite=!0,this.stopMoving()):this.x<=0&&(this.gauche=!0,this.stopMoving()),super.move(),this.x==this.theGame.canvas.width/2-1&&this.theGame.centerBall()}stopMoving(){super.stopMoving(),this.ballMoving=!1,this.theGame.gameHasStarted=!1}collisionWith(t){const e=Math.max(this.x,t.x)<=Math.min(this.x+this.width,t.x+t.width)&&Math.max(this.y,t.y)<=Math.min(this.y+this.width,t.y+t.height),s=Math.max(this.x,t.x)<=Math.min(this.x+this.width,t.x+t.width)&&Math.max(this.y,t.y)<=Math.min(this.y+this.width,t.y+t.height);if(e&&t.x<this.theGame.canvas.width/2||s&&t.x>this.theGame.canvas.width/2){const e=this.y+12-t.y;this.impactZone(t,e)}}impactZone(t,e){let s;return new Array(2),0<=e<11||77<=e<=88?s=-3:11<=e<22||66<=e<77?s=-2:22<=e<33||55<=e<66?s=-1:(33<=e<44||44<=e<55)&&(s=0),this.updateShifts(e,s,t.height),s}updateShifts(t,e,s){t>s/2?this.x<this.theGame.canvas.width/2?(this.shiftY=-e,this.shiftX=7-Math.abs(e)):(this.shiftY=-e,this.shiftX=-this.shiftX):this.x<this.theGame.canvas.width/2?(this.shiftY=e,this.shiftX=7-Math.abs(e)):(this.shiftY=e,this.shiftX=-this.shiftX),this.theGame.socket.emit("collision",this.shiftX,this.shiftY)}}class s extends t{constructor(t,e,s){super(t,e,"./images/paddle.png",0,6),this.moveState={UP:0,DOWN:1,NONE:2},this.moving=this.moveState.NONE,this.theGame=s}move(){this.moving==this.moveState.UP&&(this.y=Math.max(0,this.y-8)),this.moving==this.moveState.DOWN&&this.y+this.img.height<=this.theGame.canvas.height&&(this.y=Math.max(0,this.y+8))}moveUp(){this.moving=this.moveState.UP}moveDown(){this.moving=this.moveState.DOWN}stopMoving(){this.moving=this.moveState.NONE}}class i{constructor(t){this.raf=null,this.canvas=t,this.paddle1=new s(40,this.canvas.height/2-44,this),this.paddle2=new s(this.canvas.width-70,this.canvas.height/2-44,this),this.ball=new e(this.canvas.width/2,this.canvas.height/2,this),this.gameHasStarted=!1,this.score1=0,this.score2=0,this.socket=null,this.player1=!1}start(){this.ball.ballMoving=!0,this.animate()}stop(){this.ball.ballMoving=!1,window.cancelAnimationFrame(this.raf)}animate(){this.moveAndDraw(),this.raf=window.requestAnimationFrame(this.animate.bind(this))}moveAndDraw(){const t=this.canvas.getContext("2d");t.clearRect(0,0,this.canvas.width,this.canvas.height),this.paddle1.move(),this.paddle1.draw(t),this.paddle2.move(),this.paddle2.draw(t),this.gameHasStarted&&(this.ball.move(),this.ball.draw(t),this.ball.x===this.canvas.width/2&&this.player1&&this.socket.emit("speed synchro",this.ball.x,this.ball.y),this.ball.collisionWith(this.paddle1),this.ball.collisionWith(this.paddle2),this.updateScores())}updateScores(){this.ball.droite&&(this.score1+=1,this.paddle1.x=40,this.paddle1.y=this.canvas.height/2-44,this.paddle2.x=this.canvas.width-70,this.paddle2.y=this.canvas.height/2-44,document.getElementById("score1").textContent=this.score1,this.ball.droite=!1),this.ball.gauche&&(this.score2+=1,this.paddle1.x=40,this.paddle1.y=this.canvas.height/2-44,this.paddle2.x=this.canvas.width-70,this.paddle2.y=this.canvas.height/2-44,document.getElementById("score2").textContent=this.score2,this.ball.gauche=!1)}stratAndRestart(){!this.ball.ballMoving&&this.gameHasStarted?this.ball=new e(this.paddle1.x+this.paddle1.width+1,this.paddle1.y+this.paddle1.height/2-12,this):this.gameHasStarted||(this.ball=new e(this.paddle1.x+this.paddle1.width+1,this.paddle1.y+this.paddle1.height/2-12,this),this.gameHasStarted=!0)}otherstratAndRestart(t,e){this.stratAndRestart(),this.player1||(this.ball.x=this.canvas.width-this.paddle2.width-t-1,this.ball.y=this.paddle2.y+this.paddle2.height/2-12,this.ball.shiftX=-e)}KeyDownActionHandler(t){switch(t.key){case"ArrowUp":case"Up":this.socket.emit("moveUp"),this.paddle1.moveUp();break;case"ArrowDown":case"Down":this.socket.emit("moveDown"),this.paddle1.moveDown();break;case" ":!0===this.player1&&(this.stratAndRestart(),this.socket.emit("send ball",this.ball.x,this.ball.shiftX));break;default:return}t.preventDefault()}keyUpActionHandler(t){switch(t.key){case"ArrowUp":case"Up":case"ArrowDown":case"Down":this.socket.emit("stopMoving",this.paddle1.y),this.paddle1.stopMoving();break;default:return}t.preventDefault()}handleSocket(){this.socket=io(),this.socket.on("number",(t=>this.registerPlayer(t))),this.socket.on("disconnect player",(()=>this.handleDisconnectedPlayer())),this.socket.on("start game",(()=>this.start())),this.socket.on("stop game",(()=>this.stop())),this.socket.on("need other player",(()=>this.needAnotherPlayer())),this.socket.on("moveUp",(()=>this.paddle2.moveUp())),this.socket.on("moveDown",(()=>this.paddle2.moveDown())),this.socket.on("stopMoving",(t=>{this.paddle2.stopMoving(),this.paddle2.y=t})),this.socket.on("ball sended",((t,e)=>this.otherstratAndRestart(t,e))),this.socket.on("shifts",((t,e)=>this.ballSpeedRefactor(t,e))),this.socket.on("arrived",document.getElementById("notif").innerHTML="")}registerPlayer(t){if(t<3){console.log(`Welcome, player #${t}`);const e="Player #"+t;document.getElementById("player").innerHTML=e,document.getElementById("connect").value="Connected",document.getElementById("connect").style.backgroundColor="lightgreen",document.getElementById("connect").style.color="black",1==t&&(document.getElementById("start").disabled=!1,this.player1=!0),2==t&&(this.socket.emit("second"),this.player1=!1)}else console.log("Connexion refused : already full players connected."),document.getElementById("connect").style.backgroundColor="red",document.getElementById("connect").value="Cant connect"}playerQuit(){this.socket.emit("quit"),document.getElementById("start").disabled=!0}handleDisconnectedPlayer(){document.getElementById("start").disabled=!0,document.getElementById("connect").style.backgroundColor="red",document.getElementById("start").style.backgroundColor="red",document.getElementById("connect").style.color="black",document.getElementById("connect").value="Disconnected",document.getElementById("start").value="",document.getElementById("player").innerHTML="GAME-OVER",document.getElementById("notif").innerHTML="One player quit",this.stop()}needAnotherPlayer(){document.getElementById("notif").innerHTML="need another player to start the game",this.stop()}ballSpeedRefactor(t,e){this.player1||(this.ball.shiftX=-t,this.ball.shiftY=e)}}window.addEventListener("load",(()=>{const t=document.getElementById("field"),e=new i(t);document.getElementById("connect").addEventListener("click",(()=>o(e))),document.getElementById("start").addEventListener("click",(()=>a(e))),window.addEventListener("keydown",e.KeyDownActionHandler.bind(e)),window.addEventListener("keyup",e.keyUpActionHandler.bind(e))}));let h=!1;const a=t=>{h?(document.getElementById("start").value="play ►",t.socket.emit("stop"),t.stop()):(t.start(),t.socket.emit("start"),document.getElementById("start").value="pause ■ "),h=!h};let n=!1;const o=t=>{n?t.playerQuit():t.handleSocket(),n=!n}})();